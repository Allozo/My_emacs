;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;                     Содержание:                         ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;                                                         ;;
;; 1. Пути загрузки плагинов                               ;;
;; 2. Настройка внешнего вида                              ;;
;; 3. Внутренние удобства                                  ;;
;; 4. Напишем функции                                      ;;
;; 5. Переобозначим клавиши                                ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;            1. Путь загрузки плагинов                    ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                                                           ;;
(add-to-list 'load-path "~/.emacs.d/plugins")              ;;
                                                           ;;
;(add-to-list 'load-path "~/.emacs.d/ergoemacs-mode")      ;;
                                                           ;;
(add-to-list 'load-path "~/.emacs.d/plugins/projectile")   ;;
                                                           ;;
(add-to-list 'load-path "~/.emacs.d/plugins/auto-complete");;
(add-to-list 'load-path "~/.emacs.d/plugins/popup")        ;;
                                                           ;;
(add-to-list 'load-path "~/.emacs.d/plugins/yasnippet")    ;;
                                                           ;;
(add-to-list 'load-path "~/.emacs.d/plugins/sublimity")    ;;
                                                           ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;           2. Настройка внешнего вида                    ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                                                           ;;
;; Удаляем стартовый экран                                 ;;
(setq inhibit-startup-message t)                           ;;
(setq-default indent-tabs-mode nil)                        ;;
                                                           ;;
;; отчистить Scratch                                       ;;
(setq initial-scratch-message nil)                         ;;
                                                           ;;
;; Поменяем цвета                                          ;;
(set-background-color "#333333")                           ;;
(set-foreground-color "#ffffff")                           ;;
                                                           ;;
;; Отключает меню, тул бар и скролл бар                    ;;
(menu-bar-mode   -1)                                       ;;
(tool-bar-mode   -1)                                       ;;
(scroll-bar-mode -1)                                       ;;
                                                           ;;
;; Добавляет номера строк                                  ;;
(require 'linum+)                                          ;;
(setq linum-format " %d")                                  ;;
(global-linum-mode 1)                                      ;;
;; показать номер строки в mode-line                       ;;
(line-number-mode   t)                                     ;;
;; показать номер столбца в mode-line                      ;;
(column-number-mode t)                                     ;;
                                                           ;;
;; Подсветка текущей строки                                ;;
(global-hl-line-mode 1)                                    ;;
                                                           ;;
;; Удалить выделенный текст при вводе поверх               ;;
(delete-selection-mode t)                                  ;;
                                                           ;;
;; переносить по словам                                    ;;
(setq word-wrap          t)                                ;;
(global-visual-line-mode t)                                ;;
                                                           ;;
;; Подсветка скобок                                        ;;
(setq show-paren-style 'expression)                        ;;
(show-paren-mode 1)                                        ;;
                                                           ;;
;; лучшая отрисовка буфера                                 ;;
(setq redisplay-dont-pause t)                              ;;
                                                           ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;             3. Внутренние удобства                      ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                                                           ;;
;; Отключает звуки                                         ;;
(setq visible-bell 1)                                      ;;
                                                           ;;
;; Укорачиваем yes/no                                      ;;
(fset 'yes-or-no-p 'y-or-n-p)                              ;;
                                                           ;;
;; Сохранение сессии                                       ;;
;(desktop-save-mode t)                                     ;;
                                                           ;;
;; Отключает лишние сохранения                             ;;
(setq make-backup-files         nil)                       ;;
(setq auto-save-list-file-name  nil)                       ;;
(setq auto-save-default         nil)                       ;;
                                                           ;;
;; Подключает ergoemacs                                    ;;
;(require 'ergoemacs-mode)                                 ;;
                                                           ;;
;; автозакрытие {},[],()                                   ;;
(electric-pair-mode    1)                                  ;;
(electric-indent-mode -1)                                  ;;
                                                           ;;
;; Дополнение имён папок                                   ;;
(require 'ido)                                             ;;
(ido-mode t)                                               ;;
(icomplete-mode                t)                          ;;
(ido-everywhere                t)                          ;;
(setq ido-vitrual-buffers      t)                          ;;
(setq ido-enable-flex-matching t)                          ;;
                                                           ;;
;; projectile                                              ;;
(require 'projectile)                                      ;;
                                                           ;;
                                                           ;;
;; Плавность прокрутки                                     ;;
(setq redisplay-dont-pause t)                              ;;
;; Медленная плавная прокрутка колесиком.                  ;;
(setq mouse-wheel-progressive-speed nil)                   ;;
;; Прокручивать по 1 строки.                               ;;
(setq mouse-wheel-scroll-amount '(1 ((shift) . 1)))        ;;
(setq scroll-margin 1)                                     ;;
;; Перемещение по стрелкам по 1 строчке                    ;;
(setq scroll-conservatively 100000)                        ;;
                                                           ;;
;; отключить возможность ставить отступы TAB'ом            ;;
(setq-default indent-tabs-mode nil)                        ;;
;; ширина табуляции - 4 пробельных символа                 ;;
(setq-default tab-width          4)                        ;;
(setq-default c-basic-offset     4)                        ;;
;; стандартная ширина отступа - 4 пробельных символа       ;;
(setq-default standart-indent    4)                        ;;
;; сдвигать Lisp-выражения на 4 пробельных символа         ;;
(setq-default lisp-body-indent   4)                        ;;
                                                           ;;
;; Что-то для лиспа                                        ;;
(setq lisp-indent-function                                 ;;
      'common-lisp-indent-function)                        ;;
                                                           ;;
;; Зададим расширение *scratch*                            ;;
(setq initial-major-mode (quote text-mode))                ;;
                                                           ;;
;; Imenu                                                   ;;
(require 'imenu)                                           ;;
;; автоматически обновлять список функций в буфере         ;;
(setq imenu-auto-rescan      t)                            ;;
;; диалоги Imenu только в минибуфере                       ;;
(setq imenu-use-popup-menu nil)                            ;;
                                                           ;;
;; Удалить лишние пробелы при сохранении                   ;;
(add-to-list 'write-file-functions                         ;;
             'delete-trailing-whitespace)                  ;;
                                                           ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;               4. Написанные функции                     ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                                                           ;;
;; Подключим русскую рааскладку для сочетаний              ;;
(defun reverse-input-method (input-method)                 ;;
  "Build the reverse mapping of single                     ;;
                           letters from INPUT-METHOD."     ;;
  (interactive                                             ;;
   (list (read-input-method-name                           ;;
          "Use input method (default current): ")))        ;;
  (if (and input-method (symbolp input-method))            ;;
      (setq input-method (symbol-name input-method)))      ;;
  (let ((current current-input-method)                     ;;
        (modifiers '(nil (control)                         ;;
                  (meta) (control meta))))                 ;;
    (when input-method                                     ;;
      (activate-input-method input-method))                ;;
    (when (and                                             ;;
        current-input-method quail-keyboard-layout)        ;;
      (dolist (map (cdr (quail-map)))                      ;;
        (let* ((to (car map))                              ;;
               (from (quail-get-translation                ;;
                      (cadr map)                           ;;
                      (char-to-string to) 1)))             ;;
          (when (and (characterp from)                     ;;
                     (characterp to))                      ;;
            (dolist (mod modifiers)                        ;;
              (define-key local-function-key-map           ;;
                (vector (append mod (list from)))          ;;
                (vector (append mod (list to))))           ;;
            )))))                                          ;;
    (when input-method                                     ;;
      (activate-input-method current))))                   ;;
                                                           ;;
(reverse-input-method 'russian-computer)                   ;;
                                                           ;;
;; Вывести все открытые буферы                             ;;
(setq bs-configurations                                    ;;
      '(("files" "^\\*scratch\\*" nil nil                  ;;
         bs-visits-non-file                                ;;
         bs-sort-buffer-interns-are-last)))                ;;
                                                           ;;
;; Открыть SpeedBar                                        ;;
(require 'sr-speedbar)                                     ;;
(custom-set-variables                                      ;;
 '(package-selected-packages (quote (undo-tree)))          ;;
 '(speedbar-default-position (quote left))                 ;;
 '(speedbar-show-unknown-files t)                          ;;
 '(sr-speedbar-right-side nil)                             ;;
 '(sr-speedbar-width-x 14))                                ;;
                                                           ;;
;; Закомментировать/ раскоментировать                      ;;
(defun comment-or-uncomment-this (&optional lines)         ;;
  (interactive "P")                                        ;;
  (if mark-active                                          ;;
    (if (< (mark) (point))                                 ;;
        (comment-or-uncomment-region (mark) (point))       ;;
        (comment-or-uncomment-region (point) (mark)))      ;;
    (comment-or-uncomment-region                           ;;
      (line-beginning-position)                            ;;
      (line-end-position lines))))                         ;;
                                                           ;;
;; Создаёт пустой буффер                                   ;;
(defun create-empty-buffer ()                              ;;
  (interactive)                                            ;;
  (let (($buf (generate-new-buffer "untitled")))           ;;
    (switch-to-buffer $buf)                                ;;
    (funcall initial-major-mode)                           ;;
    (setq buffer-offer-save t)                             ;;
    $buf                                                   ;;
  )                                                        ;;
)                                                          ;;
                                                           ;;
;; Добавим сниппеты                                        ;;
(require 'yasnippet)                                       ;;
(yas-global-mode 1)                                        ;;
(yas-reload-all)                                           ;;
(add-hook 'prog-mode-hook #'yas-minor-mode)                ;;
                                                           ;;
; Auto-complite                                           ;;
;(require 'auto-complete)                                   ;;
;(setq ac-auto-start        t)                              ;;
;(setq ac-auto-show-menu    t)                              ;;
;(global-auto-complete-mode t)                              ;;

;;~ Следующее нужно для полноценной работы auto-complite   ;;
;;                                                         ;;
(defun system-is-linux()                                   ;;
    (string-equal system-type "gnu/linux"))                ;;
(defun system-is-windows()                                 ;;
    (string-equal system-type "windows-nt"))               ;;
                                                           ;;
;; Unix path-variable                                      ;;
(when (system-is-linux)                                    ;;
    (setq unix-sbcl-bin          "/usr/bin/sbcl")          ;;
    (setq unix-init-path         "~/.emacs.d")             ;;
    (setq unix-init-ac-path                                ;;
          "~/.emacs.d/plugins/auto-complete")              ;;
    (setq unix-init-ac-dict-path                           ;;
          "~/.emacs.d/plugins/auto-complete/dict")        ;;
    )
                                                           ;;
(defun ac-init()                                           ;;
    (require 'auto-complete-config)                        ;;
    (ac-config-default)                                    ;;
    (if (system-is-windows)                                ;;
        (add-to-list 'ac-dictionary-directories            ;;
                     win-init-ac-dict-path)                ;;
        (add-to-list 'ac-dictionary-directories            ;;
                     unix-init-ac-dict-path))              ;;
    (setq ac-auto-start        t)                          ;;
    (setq ac-auto-show-menu    t)                          ;;
    (global-auto-complete-mode t)                          ;;

    (add-to-list 'ac-modes   'lisp-mode)                   ;;
    ;; искать автодополнения в CEDET                       ;;
    (add-to-list 'ac-sources 'ac-source-semantic)          ;;
    ;; среди переменных                                    ;;
    (add-to-list 'ac-sources 'ac-source-variables)         ;;
    ;; в названиях функций                                 ;;
    (add-to-list 'ac-sources 'ac-source-functions)         ;;
    ;; в той папке где редактируемый буфер                 ;;
    (add-to-list 'ac-sources 'ac-source-dictionary)        ;;
    ;; по всему буферу                                     ;;
    (add-to-list 'ac-sources                               ;;
                 'ac-source-words-in-all-buffer)           ;;
    (add-to-list 'ac-sources                               ;;
                 'ac-source-files-in-current-dir)         ;;
)

                                                           ;;
(if (system-is-windows)                                    ;;
    (when (file-directory-p win-init-ac-path)              ;;
        (add-to-list 'load-path win-init-ac-path)          ;;
        (ac-init))                                         ;;
    (when (file-directory-p unix-init-ac-path)             ;;
        (add-to-list 'load-path unix-init-ac-path)         ;;
        (ac-init)))                                        ;;
;;                                                         ;;
;;~                                                        ;;
                                                           ;;
                                                           ;;
;(semantic-mode 1)
;; показsdftn названиt тага в верхней строке буфера
;(global-semantic-stickyfunc-mode t)
;; активирует автоматический анализ кода в буферах когда Emacs "свободен" и ожидает ввода данных от пользователя (idle time)
;(global-semantic-idle-scheduler-mode t)
;; активирует показ возможных дополнений имен во время ожидания ввода. Требует чтобы был включен global-semantic-idle-scheduler-mode;
;(global-semantic-show-unmatched-syntax-mode t)
;(global-semantic-show-parser-state-mode t)

;(semantic-mode 1)

                                                           ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;            5. Переобозначим кнопки                      ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                                                           ;;
(cua-mode)                                                 ;;
                                                           ;;
(global-set-key (kbd "C-o")   'find-file)                  ;;
(global-set-key (kbd "C-a")   'mark-whole-buffer)          ;;
(global-set-key (kbd "C-s")   'save-buffer)                ;;
(global-set-key (kbd "C-S-s") 'write-file)                 ;;
(global-set-key (kbd "C-f")   'isearch-forward)            ;;
(global-set-key (kbd "C-n")   'create-empty-buffer)        ;;
(require 'redo+)                                           ;;
(global-set-key (kbd "C-S-z") 'redo)                       ;;
                                                           ;;
(global-set-key (kbd "M-f")   'delete-forward-char)        ;;
(global-set-key (kbd "M-d")   'delete-backward-char)       ;;
(global-set-key (kbd "M-SPC") 'set-mark-command)           ;;
(global-set-key (kbd "RET")   'newline-and-indent)         ;;
                                                           ;;
;; Перемещение по стрелочкам                               ;;
(global-set-key (kbd "M-i")   'previous-line)              ;;
(global-set-key (kbd "M-k")   'next-line)                  ;;
(global-set-key (kbd "M-j")   'backward-char)              ;;
(global-set-key (kbd "M-l")   'forward-char)               ;;
                                                           ;;
(global-set-key (kbd "C-i")   'previous-line)              ;;
(global-set-key (kbd "C-k")   'next-line)                  ;;
(global-set-key (kbd "C-j")   'left-word)                  ;;
(global-set-key (kbd "C-l")   'right-word)                 ;;
                                                           ;;
(global-set-key (kbd "C-M-i") 'cua-scroll-down)            ;;
(global-set-key (kbd "C-M-k") 'cua-scroll-up)              ;;
(global-set-key (kbd "C-M-j") 'beginning-of-visual-line)   ;;
(global-set-key (kbd "C-M-l") 'end-of-visual-line)         ;;
                                                           ;;
(global-set-key (kbd "M-2")   'delete-window)              ;;
(global-set-key (kbd "M-3")   'delete-other-windows)       ;;
                                                           ;;
;; Показать все буферы в отдельном окне                    ;;
(global-set-key (kbd "<f2>")  'bs-show)                    ;;
                                                           ;;
;; Показать SpeedBar                                       ;;
(global-set-key (kbd "<f12>") 'sr-speedbar-toggle)         ;;
                                                           ;;
;; Закоменнтировать строку или область                     ;;
(global-set-key (kbd "C-/")   'comment-or-uncomment-this)  ;;
                                                           ;;
;; Сочетнания для projectile                               ;;
;; Найти файл в проекте                                    ;;
(global-set-key (kbd "C-c p f") 'projectile-find-file)     ;;
;; Найти строку во всем проекте                            ;;
(global-set-key (kbd "C-c p g") 'projectile-grep)          ;;
;; Заменить "строку" во всем проекте                       ;;
(global-set-key (kbd "C-c p r") 'projectile-replace)       ;;
                                                           ;;
;; Ищет определение функции                                ;;
(global-set-key (kbd "<f6>")   'imenu)                     ;;
                                                           ;;
;; Bookmark                                                ;;
(global-set-key (kbd "<f4>")   'bookmark-bmenu-list)       ;;
(global-set-key (kbd "C-<f4>") 'bookmark-set)              ;;
                                                           ;;
                                                           ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
